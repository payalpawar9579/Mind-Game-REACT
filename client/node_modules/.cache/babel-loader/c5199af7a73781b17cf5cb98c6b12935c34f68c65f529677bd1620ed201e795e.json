{"ast":null,"code":"var _jsxFileName = \"/Users/payal/Desktop/MindGame/client/src/components/Game.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// Game.jsx\nimport React, { useState, useEffect } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls, useGLTF } from '@react-three/drei';\nimport * as THREE from 'three';\nimport backgroundImg from '../images/allbg.png'; // Adjust path as necessary\n\n// Model component for loading the GLTF model\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Model = () => {\n  _s();\n  const {\n    scene\n  } = useGLTF('/models/scene.gltf'); // Load the model from public directory\n\n  // Apply color adjustments to the model if necessary\n  scene.traverse(child => {\n    if (child.isMesh) {\n      child.material.color.set('white'); // Set color if not visible\n      child.material.needsUpdate = true; // Update material\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"primitive\", {\n    object: scene,\n    scale: 3\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n};\n_s(Model, \"o+hqw2nGnmzAsiWsKcbG4W2mWg4=\", false, function () {\n  return [useGLTF];\n});\n_c = Model;\nconst Game = () => {\n  _s2();\n  const [step, setStep] = useState(0);\n  const [message, setMessage] = useState(\"Press 'Start Game' to begin the magic!\");\n  const [timeLeft, setTimeLeft] = useState(300); // Timer in seconds\n\n  // Game logic functions (initializeGame, startGame, etc.) go here\n  const startGame = () => {\n    setStep(1);\n    setMessage(\"Think of a number in your mind, and let’s do some magic with it!\");\n    setTimeLeft(300); // Reset timer to 5 minutes\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n  useEffect(() => {\n    if (timeLeft > 0 && step > 0) {\n      // Timer only runs when the game is active\n      const timerId = setInterval(() => setTimeLeft(prev => prev - 1), 1000);\n      return () => clearInterval(timerId);\n    } else if (timeLeft === 0) {\n      setMessage(\"Time's up! Please restart the game.\");\n      setStep(0); // End game when time runs out\n    }\n  }, [timeLeft, step]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen p-6 text-white\",\n    style: {\n      backgroundImage: `url(${backgroundImg})`,\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white bg-opacity-20 rounded-lg p-16 shadow-2xl max-w-2xl text-center transform scale-110\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-5xl font-bold mb-8 text-yellow-300\",\n        children: \"Magic Number Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-2xl font-medium mb-8\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), step > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-2xl font-semibold text-red-500 mb-8\",\n        children: [\"Time Left: \", formatTime(timeLeft)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), step === 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startGame,\n        className: \"px-8 py-4 bg-green-500 text-2xl text-white font-semibold rounded-lg hover:bg-green-600 transition-colors duration-300 focus:outline-none focus:ring-4 focus:ring-green-400 shadow-lg\",\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 w-full h-96 canvas-container\",\n        children: /*#__PURE__*/_jsxDEV(Canvas, {\n          gl: {\n            toneMapping: THREE.ACESFilmicToneMapping\n          },\n          camera: {\n            position: [0, 0, 10],\n            fov: 50\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n            intensity: 0.3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n            position: [5, 5, 5],\n            intensity: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n            position: [-5, -5, -5],\n            intensity: 0.5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Model, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s2(Game, \"IIOqYv/t4gVAXKf+VZIGmr/wa04=\");\n_c2 = Game;\nexport default Game;\nvar _c, _c2;\n$RefreshReg$(_c, \"Model\");\n$RefreshReg$(_c2, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Canvas","OrbitControls","useGLTF","THREE","backgroundImg","jsxDEV","_jsxDEV","Model","_s","scene","traverse","child","isMesh","material","color","set","needsUpdate","object","scale","fileName","_jsxFileName","lineNumber","columnNumber","_c","Game","_s2","step","setStep","message","setMessage","timeLeft","setTimeLeft","startGame","formatTime","seconds","minutes","Math","floor","secs","timerId","setInterval","prev","clearInterval","className","style","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","children","onClick","gl","toneMapping","ACESFilmicToneMapping","camera","position","fov","intensity","_c2","$RefreshReg$"],"sources":["/Users/payal/Desktop/MindGame/client/src/components/Game.jsx"],"sourcesContent":["// Game.jsx\nimport React, { useState, useEffect } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls, useGLTF } from '@react-three/drei';\nimport * as THREE from 'three';\nimport backgroundImg from '../images/allbg.png'; // Adjust path as necessary\n\n// Model component for loading the GLTF model\nconst Model = () => {\n  const { scene } = useGLTF('/models/scene.gltf'); // Load the model from public directory\n\n  // Apply color adjustments to the model if necessary\n  scene.traverse((child) => {\n    if (child.isMesh) {\n      child.material.color.set('white'); // Set color if not visible\n      child.material.needsUpdate = true; // Update material\n    }\n  });\n\n  return <primitive object={scene} scale={3} />;\n};\n\nconst Game = () => {\n  const [step, setStep] = useState(0);\n  const [message, setMessage] = useState(\"Press 'Start Game' to begin the magic!\");\n  const [timeLeft, setTimeLeft] = useState(300); // Timer in seconds\n\n  // Game logic functions (initializeGame, startGame, etc.) go here\n  const startGame = () => {\n    setStep(1);\n    setMessage(\"Think of a number in your mind, and let’s do some magic with it!\");\n    setTimeLeft(300); // Reset timer to 5 minutes\n  };\n\n  const formatTime = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n\n  useEffect(() => {\n    if (timeLeft > 0 && step > 0) { // Timer only runs when the game is active\n      const timerId = setInterval(() => setTimeLeft((prev) => prev - 1), 1000);\n      return () => clearInterval(timerId);\n    } else if (timeLeft === 0) {\n      setMessage(\"Time's up! Please restart the game.\");\n      setStep(0); // End game when time runs out\n    }\n  }, [timeLeft, step]);\n\n  return (\n    <div\n      className=\"flex flex-col items-center justify-center min-h-screen p-6 text-white\"\n      style={{\n        backgroundImage: `url(${backgroundImg})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n      }}\n    >\n      <div className=\"bg-white bg-opacity-20 rounded-lg p-16 shadow-2xl max-w-2xl text-center transform scale-110\">\n        <h1 className=\"text-5xl font-bold mb-8 text-yellow-300\">Magic Number Guess</h1>\n        <p className=\"text-2xl font-medium mb-8\">{message}</p>\n\n        {/* Timer display and other UI elements */}\n        {step > 0 && (\n          <p className=\"text-2xl font-semibold text-red-500 mb-8\">Time Left: {formatTime(timeLeft)}</p>\n        )}\n\n        {/* Start Button */}\n        {step === 0 && (\n          <button\n            onClick={startGame}\n            className=\"px-8 py-4 bg-green-500 text-2xl text-white font-semibold rounded-lg hover:bg-green-600 transition-colors duration-300 focus:outline-none focus:ring-4 focus:ring-green-400 shadow-lg\"\n          >\n            Start Game\n          </button>\n        )}\n\n        {/* Canvas for 3D Model Display */}\n        <div className=\"mt-8 w-full h-96 canvas-container\">\n          <Canvas\n            gl={{ toneMapping: THREE.ACESFilmicToneMapping }}\n            camera={{ position: [0, 0, 10], fov: 50 }}\n          >\n            <ambientLight intensity={0.3} />\n            <directionalLight position={[5, 5, 5]} intensity={1} />\n            <pointLight position={[-5, -5, -5]} intensity={0.5} />\n            <Model />\n            <OrbitControls />\n          </Canvas>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}