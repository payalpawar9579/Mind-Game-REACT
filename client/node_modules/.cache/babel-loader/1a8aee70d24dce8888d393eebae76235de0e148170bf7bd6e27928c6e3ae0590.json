{"ast":null,"code":"var _jsxFileName = \"/Users/payal/Desktop/MindGame/client/src/components/About.jsx\",\n  _s = $RefreshSig$();\n// About.jsx\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport backgroundImg from '../images/allbg.png'; // Adjust the path based on your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst About = () => {\n  _s();\n  const navigate = useNavigate();\n  const startPlaying = () => {\n    navigate('/Game'); // Redirects to the Game page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-full min-h-screen bg-cover bg-center bg-no-repeat flex flex-col items-center justify-center p-8\",\n    style: {\n      backgroundImage: `url(${backgroundImg})`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 bg-black opacity-20\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative z-10 max-w-4xl w-full bg-white bg-opacity-30 dark:bg-gray-800 dark:bg-opacity-70 rounded-lg shadow-2xl p-8 overflow-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center text-4xl font-extrabold text-teal-300 dark:text-teal-300\",\n          children: \"How to Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc list-inside text-gray-300 dark:text-gray-300 space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Objective:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), \" Drag and drop numerical values into bins to maximize your total score.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Bin Capacity:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), \" Each bin can hold values with a combined total of up to \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: \"40\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 102\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Score Goal:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), \" Aim for a total score greater than \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: \"150\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 79\n            }, this), \" to win the game.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Time Limit:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), \" You have \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-bold\",\n              children: \"5 minutes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 53\n            }, this), \" to place all values into the bins.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Selection:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), \" Click on a value to select it before dragging it into a bin. Multiple selections are allowed.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Optimize:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), \" Use the \\\"Optimize Bins\\\" feature to automatically distribute remaining values efficiently.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Final Score:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), \" The game concludes when all values are placed or time runs out. Your final score is the sum of all values in the bins.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startPlaying,\n          className: \"px-8 py-4 bg-teal-600 text-white rounded-full hover:bg-teal-500 transition-colors duration-300 shadow-lg transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-teal-400 focus:ring-opacity-50\",\n          children: \"Start Playing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(About, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useNavigate","backgroundImg","jsxDEV","_jsxDEV","About","_s","navigate","startPlaying","className","style","backgroundImage","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/payal/Desktop/MindGame/client/src/components/About.jsx"],"sourcesContent":["// About.jsx\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport backgroundImg from '../images/allbg.png'; // Adjust the path based on your project structure\n\nconst About = () => {\n  const navigate = useNavigate();\n\n  const startPlaying = () => {\n    navigate('/Game'); // Redirects to the Game page\n  };\n\n  return (\n    <div\n      className=\"relative w-full min-h-screen bg-cover bg-center bg-no-repeat flex flex-col items-center justify-center p-8\"\n      style={{ backgroundImage: `url(${backgroundImg})` }}\n    >\n      {/* Overlay for better text readability */}\n      <div className=\"absolute inset-0 bg-black opacity-20\"></div>\n\n      {/* Content Container */}\n      <div className=\"relative z-10 max-w-4xl w-full bg-white bg-opacity-30 dark:bg-gray-800 dark:bg-opacity-70 rounded-lg shadow-2xl p-8 overflow-auto\">\n        {/* Header Section */}\n        <div className=\"mb-6\">\n          <h1 className=\"text-center text-4xl font-extrabold text-teal-300 dark:text-teal-300\">\n            How to Play\n          </h1>\n        </div>\n\n        {/* Game Rules */}\n        <div className=\"mb-8\">\n          <ul className=\"list-disc list-inside text-gray-300 dark:text-gray-300 space-y-4\">\n            <li>\n              <strong>Objective:</strong> Drag and drop numerical values into bins to maximize your total score.\n            </li>\n            <li>\n              <strong>Bin Capacity:</strong> Each bin can hold values with a combined total of up to <span className=\"font-bold\">40</span>.\n            </li>\n            <li>\n              <strong>Score Goal:</strong> Aim for a total score greater than <span className=\"font-bold\">150</span> to win the game.\n            </li>\n            <li>\n              <strong>Time Limit:</strong> You have <span className=\"font-bold\">5 minutes</span> to place all values into the bins.\n            </li>\n            <li>\n              <strong>Selection:</strong> Click on a value to select it before dragging it into a bin. Multiple selections are allowed.\n            </li>\n            <li>\n              <strong>Optimize:</strong> Use the \"Optimize Bins\" feature to automatically distribute remaining values efficiently.\n            </li>\n            <li>\n              <strong>Final Score:</strong> The game concludes when all values are placed or time runs out. Your final score is the sum of all values in the bins.\n            </li>\n          </ul>\n        </div>\n\n        {/* Start Playing Button */}\n        <div className=\"flex justify-center\">\n          <button\n            onClick={startPlaying}\n            className=\"px-8 py-4 bg-teal-600 text-white rounded-full hover:bg-teal-500 transition-colors duration-300 shadow-lg transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-teal-400 focus:ring-opacity-50\"\n          >\n            Start Playing\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}