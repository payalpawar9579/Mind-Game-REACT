{"ast":null,"code":"var _jsxFileName = \"/Users/payal/Desktop/MindGame/client/src/components/ModelViewer.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// ModelViewer.jsx\nimport React, { useState, useTransition } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls, useGLTF } from '@react-three/drei';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Model = () => {\n  _s();\n  const {\n    scene\n  } = useGLTF('/models/scene.gltf'); // Load the GLTF model\n  scene.scale.set(1, 1, 1); // Adjust scale if needed\n  return /*#__PURE__*/_jsxDEV(\"primitive\", {\n    object: scene\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n};\n_s(Model, \"o+hqw2nGnmzAsiWsKcbG4W2mWg4=\", false, function () {\n  return [useGLTF];\n});\n_c = Model;\nconst ModelViewer = () => {\n  _s2();\n  const [isPending, startTransition] = useTransition();\n  const [modelLoaded, setModelLoaded] = useState(false);\n\n  // Use startTransition to load the model without blocking the main UI thread\n  startTransition(() => {\n    setModelLoaded(true);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100vw',\n      height: '100vh'\n    },\n    children: [isPending && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading model...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }, this), \" \", modelLoaded && /*#__PURE__*/_jsxDEV(Canvas, {\n      camera: {\n        position: [0, 2, 5],\n        fov: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.5,\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        position: [-5, 5, 5],\n        color: \"yellow\",\n        intensity: 1.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        position: [5, -5, 5],\n        color: \"blue\",\n        intensity: 1.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        position: [0, 5, -5],\n        color: \"green\",\n        intensity: 1.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Model, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s2(ModelViewer, \"uBEu+NkOLPu8d79DPdEvuIzVsNE=\", false, function () {\n  return [useTransition];\n});\n_c2 = ModelViewer;\nexport default ModelViewer;\nvar _c, _c2;\n$RefreshReg$(_c, \"Model\");\n$RefreshReg$(_c2, \"ModelViewer\");","map":{"version":3,"names":["React","useState","useTransition","Canvas","OrbitControls","useGLTF","jsxDEV","_jsxDEV","Model","_s","scene","scale","set","object","fileName","_jsxFileName","lineNumber","columnNumber","_c","ModelViewer","_s2","isPending","startTransition","modelLoaded","setModelLoaded","style","width","height","children","camera","position","fov","intensity","color","_c2","$RefreshReg$"],"sources":["/Users/payal/Desktop/MindGame/client/src/components/ModelViewer.jsx"],"sourcesContent":["// ModelViewer.jsx\nimport React, { useState, useTransition } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls, useGLTF } from '@react-three/drei';\n\nconst Model = () => {\n  const { scene } = useGLTF('/models/scene.gltf'); // Load the GLTF model\n  scene.scale.set(1, 1, 1); // Adjust scale if needed\n  return <primitive object={scene} />;\n};\n\nconst ModelViewer = () => {\n  const [isPending, startTransition] = useTransition();\n  const [modelLoaded, setModelLoaded] = useState(false);\n\n  // Use startTransition to load the model without blocking the main UI thread\n  startTransition(() => {\n    setModelLoaded(true);\n  });\n\n  return (\n    <div style={{ width: '100vw', height: '100vh' }}>\n      {isPending && <p>Loading model...</p>} {/* Loading fallback */}\n      {modelLoaded && (\n        <Canvas camera={{ position: [0, 2, 5], fov: 10 }}>\n          {/* Vibrant colored lights for dynamic effect */}\n          <ambientLight intensity={0.5} color=\"red\" />\n          <pointLight position={[-5, 5, 5]} color=\"yellow\" intensity={1.5} />\n          <pointLight position={[5, -5, 5]} color=\"blue\" intensity={1.5} />\n          <pointLight position={[0, 5, -5]} color=\"green\" intensity={1.5} />\n\n          {/* Model */}\n          <Model />\n\n          {/* Controls to orbit around the model */}\n          <OrbitControls />\n        </Canvas>\n      )}\n    </div>\n  );\n};\n\nexport default ModelViewer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}